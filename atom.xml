<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-07T14:41:49.683Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>congyingcy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建个人博客</title>
    <link href="http://example.com/2021/04/06/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2021/04/06/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-04-06T14:35:38.000Z</published>
    <updated>2021-04-07T14:41:49.683Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>使用 hexo 和github搭建 个人博客  </p><p>我的博客 <a href="https://congyingcy.github.io/">https://congyingcy.github.io/</a></p><p>第一部分：hexo的初级搭建还有部署到github page</p><p>第二部分：hexo的基本配置，更换主题</p><p>第三部分：hexo添加各种功能</p><span id="more"></span>  <h2 id="2-搭建教程"><a href="#2-搭建教程" class="headerlink" title="2. 搭建教程"></a>2. 搭建教程</h2><h3 id="2-1-下载git-和nodejs"><a href="#2-1-下载git-和nodejs" class="headerlink" title="2.1 下载git 和nodejs"></a>2.1 下载git 和nodejs</h3><p>安装git   一直点next就可以</p><p>安装   nodejs ，</p><p>安装完成后打开cmd    ，检查是否安装成功</p><p><img src="%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.assets/image-20210407123104885-1617796042629.png" alt="image-20210407123104885"></p><h3 id="2-2-设置github"><a href="#2-2-设置github" class="headerlink" title="2.2 设置github"></a>2.2 设置github</h3><h4 id="（1）-连接-Github"><a href="#（1）-连接-Github" class="headerlink" title="（1） 连接 Github"></a>（1） 连接 Github</h4><p>使用邮箱注册 <a href="https://link.zhihu.com/?target=https://github.com/">GitHub</a> 账户，选择免费账户（Free），并完成邮件验证。</p><p>右键 -&gt; Git Bash Here，<strong>设置用户名和邮箱</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><p><strong>创建 SSH 密匙</strong>：</p><p>输入 <code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code>，然后一路回车。</p><p><strong>添加密匙：</strong></p><p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p><p><img src="%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.assets/image-20210407124406740-1617796070854.png" alt="image-20210407124406740"></p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p><p><img src="%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.assets/image-20210407124946177-1617796080085.png" alt="image-20210407124946177">===============</p><p><strong>验证连接：</strong></p><p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p><p><img src="%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.assets/image-20210407124912673-1617796087387.png" alt="image-20210407124912673"></p><p>显示 “Hi xxx!   You’ve successfully……” 即连接成功。</p><h4 id="（2）创建-Github-Pages-仓库"><a href="#（2）创建-Github-Pages-仓库" class="headerlink" title="（2）创建 Github Pages 仓库"></a>（2）创建 Github Pages 仓库</h4><p>GitHub 主页右上角加号 -&gt; New repository：</p><ul><li>Repository name 中输入 <strong><u><code>用户名.github.io</code></u></strong></li><li>勾选 “Initialize this repository with a README”</li><li>Description 选填</li><li><strong>注意 仓库名字   必须和github名字 一样，否则通过github无法访问 ，必须输入正确！！！！</strong></li></ul><p>填好后点击 Create repository 创建。</p><p><img src="%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.assets/image-20210407124758738-1617796093851.png" alt="image-20210407124758738"></p><p>创建后默认自动启用 HTTPS，博客地址为：<code>https://用户名.github.io</code></p><h3 id="2-3-Hexo-初始化和本地预览"><a href="#2-3-Hexo-初始化和本地预览" class="headerlink" title="2.3 Hexo 初始化和本地预览"></a><strong>2.3 Hexo 初始化和本地预览</strong></h3><h4 id="（1）npm-淘宝镜像安装"><a href="#（1）npm-淘宝镜像安装" class="headerlink" title="（1）npm 淘宝镜像安装"></a>（1）npm 淘宝镜像安装</h4><p>为了方便开发，我们最好是直接永久使用淘宝的镜像源</p><p>直接命令行的设置</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>手动修改设置</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.打开.npmrc文件（C:\Program Files\nodejs\node_modules\npm\npmrc，没有的话可以使用git命令行建一个( touch .npmrc)，用cmd命令建会报错）</span><br><span class="line">2.增加 registry =https://registry.npm.taobao.org  即可。</span><br></pre></td></tr></table></figure><p>如果需要恢复成原来的官方地址只需要执行如下命令:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure><p>检测是否安装成功：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><h4 id="（2）设置hexo"><a href="#（2）设置hexo" class="headerlink" title="（2）设置hexo"></a>（2）设置hexo</h4><p><strong>初始化并安装所需组件：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init      # 初始化</span><br><span class="line">npm install    # 安装组件</span><br></pre></td></tr></table></figure><p>完成后依次输入下面命令，<strong>启动本地服务器进行预览</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo s   # 启动预览</span><br></pre></td></tr></table></figure><p><strong>访问</strong> <code>http://localhost:4000</code><strong>，出现 Hexo 默认页面，本地博客安装成功！</strong></p><p>如果出现页面加载不出来，可能是端口被占用了。Ctrl+C 关闭服务器，运行 <code>hexo server -p 5000</code> 更改端口号后重试。</p><h4 id="（3）-部署-Hexo-到-GitHub-Pages"><a href="#（3）-部署-Hexo-到-GitHub-Pages" class="headerlink" title="（3） 部署 Hexo 到 GitHub Pages"></a>（3） 部署 Hexo 到 GitHub Pages</h4><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p><p>首先<strong>安装 hexo-deployer-git</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后<strong>修改 _config.yml</strong> 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p><p>完成！这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了。</p><h5 id="无法通过博客地址访问-的-解决方法："><a href="#无法通过博客地址访问-的-解决方法：" class="headerlink" title="无法通过博客地址访问  的 解决方法："></a>无法通过博客地址访问  的 解决方法：</h5><p>通过站长之家查询博客 的IP地址<br><a href="http://tool.chinaz.com/dns">http://tool.chinaz.com/dns</a></p><p><img src="%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.assets/image-20210407125711601-1617796103899.png" alt="image-20210407125711601"></p><p>如果没有IP，多刷几次就可以了。<br>然后改hosts文件，需要用管理员权限才可以生效。</p><p>打开C:\Windows\System32\drivers\etc<br>里面的hosts文件，然后输入185.199.111.153(自己查询到的) congyingcy.github.io</p><p>修改hosts 文件的方法：</p><p>（1) 通过记事本打开</p><p><img src="%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.assets/image-20210407125918168-1617796109950.png" alt="image-20210407125918168"></p><p>（2） 完成修改后保存到桌面</p><p><img src="%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.assets/image-20210407130119016-1617796116348.png" alt="image-20210407130119016"></p><p>(3) 然后复制 hosts 文件到 原来的C:\Windows\System32\drivers\etc  目录下 </p><h2 id="3-使用教程"><a href="#3-使用教程" class="headerlink" title="3.使用教程"></a>3.使用教程</h2><h3 id="（1）-发布文章"><a href="#（1）-发布文章" class="headerlink" title="（1） 发布文章"></a>（1） 发布文章</h3><p>进入 博客   所在目录，右键打开 Git Bash Here，创建博文：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><p>然后 source 文件夹中会出现一个  My New Post.md 文件，就可以使用 Markdown 编辑器 在该文件中撰写文章了。</p><h4 id="markdown-常用快捷键"><a href="#markdown-常用快捷键" class="headerlink" title="markdown 常用快捷键"></a>markdown 常用快捷键</h4><blockquote><p>标题：Ctrl+1、2、3…对应一、二、三…级标题（光标定位到需要设置为标题的行，按快捷键）</p><p>****加粗****：Ctrl+B（选中要加粗的文本，按快捷键）</p><p><strong>斜体</strong>：Ctrl+I（选中要设置斜体的文本，按快捷键）</p><p>下划线：Ctrl+U（选中要加下划线的文本，按快捷键）</p><p>删除线：Alt+Shift+5（选中要加删除线的文本，按快捷键）</p><p>代码片段：Ctrl+Shift+`（选中要设置为代码片段的文本，按快捷键）</p><p>代码块：Ctrl+Shift+K（任意位置按快捷键，选择编程语言然后在代码块中输入代码）</p><p>切换到下一行：Ctrl+Enter（任意位置按快捷键，在代码块中可以跳出代码块另起一行）</p><p><a href="https://link.zhihu.com/?target=https://www.baidu.com/">链接</a>：Ctrl+K（先复制链接，然后选中要加链接的文本，按快捷键。Ctrl+左键点击文本可跳转到对应链接）</p><p>取消格式：再次按相同的快捷键即可</p><p>有序列表：数字+点+空格</p><p>任务列表：加号或减号+空格</p><p>切换到列表下一行：Space+Enter</p><p>嵌套列表：按Tab键</p><p>退出列表：按 Shift+Tab</p><p>插入表格：Ctrl+T</p><p>引用：输入&gt;后面加空格，或者Ctrl+Shift+Q</p></blockquote><p>写完后运行 下面代码将文章渲染并部署到 GitHub Pages 上完成发布。<strong>以后每次发布文章都是这两条命令。</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo d   # 部署发布</span><br></pre></td></tr></table></figure><hr><p>也可以不使用命令自己创建 .md 文件，只需在文件开头手动加入如下格式 Front-matter 即可，写完后运行 <code>hexo g</code> 和 <code>hexo d</code> 发布。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World  # 标题</span><br><span class="line">date: 2019/3/26 hh:mm:ss # 时间</span><br><span class="line">categories: # 分类</span><br><span class="line">- Diary</span><br><span class="line">tags: # 标签</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要</span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">    该代码前面的内容会作为 摘要 显示，而后面的内容会替换为 “Read More” 隐藏起来。</span><br><span class="line">正文</span><br></pre></td></tr></table></figure><h3 id="2-常用命令"><a href="#2-常用命令" class="headerlink" title="(2) 常用命令"></a>(2) 常用命令</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hexo new paper         # 新建文章</span><br><span class="line"># 出现在 source文件夹下的_post里面 </span><br><span class="line"></span><br><span class="line">hexo new page board    # 新建页面 </span><br><span class="line"># 系统会自动给你在source文件夹下创建一个board文件夹</span><br><span class="line"></span><br><span class="line">hexo new draft newpage</span><br><span class="line"># 在source/_draft中新建一个newpage.md文件</span><br><span class="line">hexo server --draft</span><br><span class="line"># 在本地端口中开启服务预览</span><br><span class="line">hexo publish draft newpage</span><br><span class="line"># 草稿文件想要发表到post中</span><br><span class="line"></span><br><span class="line">hexo g                # 生成页面</span><br><span class="line">hexo d                # 部署</span><br><span class="line">hexo g -d             # 生成页面并部署</span><br><span class="line">hexo s                # 本地预览</span><br><span class="line">hexo clean            # 清除缓存和已生成的静态文件</span><br><span class="line">hexo help             # 帮助</span><br></pre></td></tr></table></figure><p> <strong>修改并部署后没有效果</strong></p><p>使用 <code>hexo clean</code> 清理后重新部署。</p><h4 id="3-更换主题"><a href="#3-更换主题" class="headerlink" title="(3) 更换主题"></a>(3) 更换主题</h4><p>首先你需要找到你喜欢的主题下载地址，<a href="https://github.com/litten/hexo-theme-yilia">Yilia主题传送门</a><br>找到Hexo文件的位置，进入<strong>themes</strong>文件夹内，这个文件夹就是用来放hexo主题的位置的。</p><p>在<strong>themes文件夹下</strong>右键选择  ****Git Bash Here* ***</p><p>输入命令,git clone +你复制的链接</p><p>git clone <a href="https://github.com/litten/hexo-theme-yilia.git">https://github.com/litten/hexo-theme-yilia.git</a></p><p>下载完成后，你就可以看到  themes   文件夹下出现了一个新的名为hexo-theme-yilia文件夹</p><p>返回到上一层， 找到**_config.yml**这个文件，用你的编辑器打开它，找到theme属性，更改属性值</p><p>theme: hexo-theme-yilia</p><p>将属性值改为刚刚下载的主题名，将文件进行保存</p><p>hexo clean //清除一下缓存</p><p>hexo g  //生成静态页面</p><p>hexo s //开启本地服务器</p><p>注意：</p><p>\1. 此时你应该注意一下你所在文件路径是否正确，应该是在themes文件夹下的</p><p>\2. 此时的粘贴快捷键不是ctrl+v,而是Insert。</p><h4 id="4-typora"><a href="#4-typora" class="headerlink" title="(4)  typora"></a>(4)  typora</h4><p>插入的图片会经常失效 解决方法：   通过本地文件的绝对路径获取图片</p><p>缺点：一旦移动了原来的图片位置或者md文档，那么就会导致无法获取到图片，导致图片加载不出来。</p><p>步骤1、 Typora的图片根目录设置<br>点击 文件—偏好设置—图像</p><p>默认是“无特殊操作”,  更改为  “复制图片到./${filename}.assets文件夹”</p><p>步骤2、Typora设置图片的相对路径<br>并勾选下面两项“对本地位置的图片应用上述规则”和“优先使用相对路径”</p><p>选择此选项后会，每次在新建一个md文件时， 在md文档所在文件夹中就会自动创建一个与该文件同名的.assets的文件夹，复制的图片也会自动保存到其中</p><p>Typora自动复制图片到指定目录下</p><p>勾选当插入本地图片时复制图片到文件夹：格式-图像-当插入本地图片时-复制图片到文件夹</p><h4 id="（5）-其他问题"><a href="#（5）-其他问题" class="headerlink" title="（5） 其他问题"></a>（5） 其他问题</h4><h5 id="无法上传问题"><a href="#无法上传问题" class="headerlink" title="无法上传问题"></a>无法上传问题</h5><p>删除 .deploy_git目录,再执行 hexo d -g就可以了</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1. 前言&quot;&gt;&lt;/a&gt;1. 前言&lt;/h2&gt;&lt;p&gt;使用 hexo 和github搭建 个人博客  &lt;/p&gt;
&lt;p&gt;我的博客 &lt;a href=&quot;https://congyingcy.github.io/&quot;&gt;https://congyingcy.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第一部分：hexo的初级搭建还有部署到github page&lt;/p&gt;
&lt;p&gt;第二部分：hexo的基本配置，更换主题&lt;/p&gt;
&lt;p&gt;第三部分：hexo添加各种功能&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="github" scheme="http://example.com/categories/hexo/github/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
</feed>
